extend base

block append header 
    script(type="module",defer, src="/src/resultController.js") 
    style.
        .outer {
            height: 160px;
            width: 160px;
            padding: 20px;
            box-shadow: 6px 6px 10px -1px rgba(0, 0, 0, 0.15),
                -6px -6px 10px -1px rgba(255, 255, 255, 0.7);
            border-radius: 50%;
        }
        .inner {
            height: 120px;
            width: 120px;
            box-shadow: inset 4px 4px 6px -1px rgba(0, 0, 0, 0.2),
                inset -4px -4px 6px -1px rgba(255, 255, 255, 0.7),
                -0.5px -0.5px 0px rgba(255, 255, 255, 1),
                0.5px 0.5px 0px rgba(0, 0, 0, 0.15), 0px 12px 10px -10px rgba(0, 0, 0, 0.05);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        svg.circularProgressBar {
            transform: rotate(-90deg);
            position: absolute;
            top: 0;
            left: 0;
        }
        .activeMealDay {
            color: #001AFF;
            font-weight: bold;
        }

        .activeWeek{
            color: #001AFF;
            font-weight: bold;
        }
        .mealInfoTable td:first-child{
            width: 40%;
        }
        .exerciseInfoTable td:first-child{
            width: 25%;
        }
        tr td{
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
        }

block body
    .min-h-screen
        #mealPopup.mealPopup.overlay.w-full.min-h-full.absolute.z-30(class='bg-black/50').hidden
            .mealPopupContainer.popupContainer(class='w-1/2 bg-[#D9D9D9] top-1/2 -translate-y-1/2 left-1/2 -translate-x-1/2').flex.flex-1.absolute.rounded-xl.opacity-0.pointer-events-none.duration-200
                svg.absolute.z-30.h-6.w-6.top-4.left-6.cursor-pointer.closeButton
                    use(href='/images/png/icons.svg#closeButton')
                .px-12.py-8.flex.flex-col.justify-center.items-center.gap-8.w-full
                    img(src="", alt="").rounded-xl.popupMealImage
                    .popUpMealInformation.flex.flex-col.font-AbhayaLibre.font-extrabold.w-full
                        .mealType.text-center.text-3xl 
                        table.font-medium.text-xl.mt-6.mealInfoTable
                            tr
                                td.px-4 Name: 
                                td.name 
                            tr
                                td.px-4 Ready in: 
                                td.cooking_time 
                            tr 
                                td.px-4 Serving: 
                                td.serving 
                            tr 
                                td.px-4 For more Information:
                                td 
                                    a.moreInfoLink.font-bold.text-blue-600(target="_blank" href="") Click Here!

        #exercisePopup.exercisePopup.overlay.w-full.min-h-full.absolute.z-30(class='bg-black/50').hidden
            .exercisePopupContainer.popupContainer(class='w-2/3 bg-[#D9D9D9] top-1/2 -translate-y-1/2 left-1/2 -translate-x-1/2').flex.flex-1.absolute.rounded-xl.opacity-0.pointer-events-none.duration-200
                svg.absolute.z-30.h-6.w-6.top-4.left-6.cursor-pointer.closeButton
                    use(href='/images/png/icons.svg#closeButton')
                .px-12.py-8.flex.flex-col.justify-center.items-center.gap-8.w-full
                    .exerciseImages.flex.flex-1.justify-evenly.gap-12.w-full
                    .exercisePopupInformation.flex.flex-col.font-AbhayaLibre.font-extrabold.w-full
                        .exerciseName.text-center.text-3xl 
                        table.font-medium.text-xl.mt-6.exerciseInfoTable
                            tr
                                td.px-4.align-top Force: 
                                td.force
                            tr
                                td.px-4.align-top Level: 
                                td.level
                            tr 
                                td.px-4.align-top Mechanic: 
                                td.mechanic
                            tr 
                                td.px-4.align-top Equipment: 
                                td.equipment
                            tr 
                                td.px-4.align-top Primary Muscles: 
                                td.primaryMuscles
                            tr 
                                td.px-4.align-top Secondary Muscles: 
                                td.secondaryMuscles
                            tr 
                                td.px-4.align-top Instructions: 
                                td.instructions
                            tr 
                                td.px-4.align-top Category: 
                                td.category

        .px-10.pt-6.pb-12
            .font-AbhayaLibre.text-2xl.label YOUR PERSONAL SUMMARY
            .calculateDisplayCards.px-20.grid.grid-cols-3.justify-center.items-center.place-items-center.mx-auto.font-Inter.mt-6.mb-12
                .bmiCard.shadow-xl.py-5.px-7.w-72
                    .calculateItemCard.flex.flex-col.gap-12.items-center   
                        .calculateItemCard--title.h-12 Body Mass Index (BMI)
                        .calculateItemCard--info.flex.flex-col
                            .bmi_circularProgressBar.relative.font-Inter
                                .outer 
                                    .inner
                                        .bmi_data.flex.flex-col.items-center.justify-center
                                            .bmi_number.font-bold.text-3xl
                                            .bmi_type.font-AbhayaLibre.text-xl BMI
                                svg.circularProgressBar.w-full.h-full 
                                    use(href='/images/png/icons.svg#bmiCircularProgressBar')

                        .calculateItemCard--status.flex.flex-col.items-center.justify-center.text-lg.h-12
                            .status_label Your BMI: 
                            .bmi_status.font-bold
                .tdeeCard.shadow-xl.py-5.px-7.w-72
                    .calculateItemCard.flex.flex-col.gap-12.items-center   
                        .calculateItemCard--title.h-12 Total Daily Energy <br>Expenditure (TDEE)
                        .calculateItemCard--info.flex.flex-col
                            .tdee_circularProgressBar.relative.font-Inter
                                .outer 
                                    .inner
                                        .tdee_data.flex.flex-col.items-center.justify-center
                                            .tdee_number.font-bold.text-3xl 
                                            .tdee_type.font-AbhayaLibre.text-xl Calories
                                svg.circularProgressBar.w-full.h-full 
                                    use(href='/images/png/icons.svg#tdeeCircularProgressBar')

                        .calculateItemCard--status.flex.flex-col.items-center.justify-center.text-lg.h-12
                            .tdee_status 1500 (+/- 150) 
                            .tdee_label.font-bold.text-center(class='text-[#384FC0]') Calories (Per day)
                .weekAfterToAchieveTargetCard.shadow-xl.py-5.px-7.w-72
                    .calculateItemCard.flex.flex-col.gap-12.items-center   
                        .calculateItemCard--title.h-12 Duration (Weeks)
                        .calculateItemCard--info.flex.flex-col
                            .weekAfterToAchieveTarget_circularProgressBar.relative.font-Inter
                                .outer 
                                    .inner
                                        .weekAfterToAchieveTarget_data.flex.flex-col.items-center.justify-center
                                            .weekAfterToAchieveTarget_number.font-bold.text-3xl 
                                            .weekAfterToAchieveTarget_type.font-AbhayaLibre.text-xl Weeks
                                svg.circularProgressBar.w-full.h-full 
                                    use(href='/images/png/icons.svg#weekAfterToAchieveTargetCircularProgressBar')

                        .calculateItemCard--status.flex.flex-col.items-center.justify-center.text-lg.h-12
                            .weekAfterToArchiveTarget_label To achieve: 
                            .weekAfterToAchieveTarget_status.font-bold(class='text-[#D3B185]') Your dream weight
            
            .font-AbhayaLibre.text-2xl Meal Suggestion Based On Your Calories
            .personalMealAndPlan.font-Alice.mb-8
                .timetable(class='w-4/5 border-[#B7B7B7]').mx-auto.border.mt-6
                    .weeks.swiper
                        .weeksContainer.swiper-wrapper
                            
                    .days.flex.w-full.justify-evenly.py-2
                        .day.monday.cursor-pointer.activeMealDay(data-day="monday") Monday
                        .day.tuesday.cursor-pointer(data-day="tuesday") Tuesday
                        .day.wednesday.cursor-pointer(data-day="wednesday") Wednesday
                        .day.thursday.cursor-pointer(data-day="thursday") Thursday
                        .day.friday.cursor-pointer(data-day="friday") Friday
                        .day.saturday.cursor-pointer(data-day="saturday") Saturday
                        .day.sunday.cursor-pointer(data-day="sunday") Sunday
                
                .mealInformation
                    .mealInformationLabel.text-center.my-10.text-3xl.font-AbhayaLibre.font-bold #[span Monday]'s Meal Suggestion
                    .mealItemContainer.grid.grid-cols-3.place-items-center.justify-center.mx-auto.my-6.px-20.duration-200(class='translate-y-10')
                    .mealNutrients.font-AbhayaLibre.text-xl.flex.justify-evenly.w-full.px-20.mt-8
                        .calories.flex.flex-col.justify-center.items-center
                            svg.w-12.h-12
                                use(href='/images/png/icons.svg#calories')
                            .caloriesLabel Calories (cal)
                            .caloriesValue
                        .protein.flex.flex-col.justify-center.items-center
                            svg.w-12.h-12
                                use(href='/images/png/icons.svg#protein')
                            .proteinLabel Protein (g)
                            .proteinValue
                        .fat.flex.flex-col.justify-center.items-center
                            svg.w-12.h-12
                                use(href='/images/png/icons.svg#fat')
                            .fatLabel Fat (g)
                            .fatValue
                        .carbohydrates.flex.flex-col.justify-center.items-center
                            svg.w-12.h-12
                                use(href='/images/png/icons.svg#carbohydrates')
                            .carbohydratesLabel Carbohydrates (g)
                            .carbohydratesValue

            .font-AbhayaLibre.text-2xl Exercise Suggestion
            .exercise.font-Alice
                .exceriseContainer
                    .exerciseQuestionContainer.flex.flex-col.justify-center.items-center.gap-4.mt-4
                        .exerciseQuestion.text-center.text-xl.italic Would you like us to suggest for you some exercises?
                        button.exerciseQuestionButton.linearBackground.py-2.px-4.rounded-xl.text-white.cursor-pointer(class='w-1/4') Suggest now!
                    form.exerciseForm.hidden.flex.flex-col.items-center
                        .exerciseListLabel.text-center.my-10.text-3xl.font-AbhayaLibre.font-bold Exercise List
                        .grid.grid-cols-5.gap-12
                            .exerciseLevel.font-AbhayaLibre.flex.flex-col.justify-between.items-center
                                .exerciseLevelLabel Level:
                                .exerciseLevelSelect.relative
                                    .exerciseLevelSelected.select-none.cursor-pointer.flex.flex-1.items-center.justify-between.py-2(class='bg-[#EAF0F7]').px-3.rounded-xl
                                        input.bg-transparent.select-none.outline-none.cursor-pointer(type='text' name='exerciseLevel' placeholder='Level...' onkeydown="return false" autocomplete='off' value='' style='caret-color: transparent')
                                        img(src='./../images/png/down-arrow-circle-svgrepo-com.png').w-4.h-4
                                    .absolute.exerciseLevelOptions.z-40.w-full.hidden.max-h-48.overflow-y-auto
                                        .exerciseLevelOption(class='bg-[#EAF0F7]' data-value='').py-2.px-2.rounded-t-xl.border-b.cursor-pointer Level...
                                        .exerciseLevelOption(class='bg-[#EAF0F7]' data-value='Beginner').py-2.px-2.border-b.cursor-pointer Beginner
                                        .exerciseLevelOption(class='bg-[#EAF0F7]' data-value='Intermediate').py-2.px-2.border-b.cursor-pointer Intermediate
                                        .exerciseLevelOption(class='bg-[#EAF0F7]' data-value='Expert').py-2.px-2.rounded-b-xl.cursor-pointer Expert
                            
                            .exerciseMechanic.font-AbhayaLibre.flex.flex-col.justify-between.items-center
                                .exerciseMechanicLabel Mechanic:
                                .exerciseMechanicSelect.relative
                                    .exerciseMechanicSelected.select-none.cursor-pointer.flex.flex-1.items-center.justify-between.py-2(class='bg-[#EAF0F7]').px-3.rounded-xl
                                        input.bg-transparent.select-none.outline-none.cursor-pointer(type='text' name='exerciseMechanic' placeholder='Mechanic...' onkeydown="return false" autocomplete='off' value='' style='caret-color: transparent')
                                        img(src='./../images/png/down-arrow-circle-svgrepo-com.png').w-4.h-4
                                    .absolute.exerciseMechanicOptions.z-40.w-full.hidden.max-h-48.overflow-y-auto
                                        .exerciseMechanicOption(class='bg-[#EAF0F7]' data-value='').py-2.px-2.rounded-t-xl.border-b.cursor-pointer Mechanic...
                                        - exerciseMechanic = exerciseMechanic.map(mechanic => `${mechanic[0].toUpperCase()}${mechanic.slice(1)}`)
                                        each mechanic, idx in exerciseMechanic
                                            if idx != exerciseMechanic.length - 1
                                                .exerciseMechanicOption(class='bg-[#EAF0F7]' data-value=mechanic).py-2.px-2.border-b.cursor-pointer= mechanic
                                            else
                                                .exerciseMechanicOption(class='bg-[#EAF0F7]' data-value=mechanic).py-2.px-2.rounded-b-xl.cursor-pointer= mechanic
                            
                            .exerciseEquipment.font-AbhayaLibre.flex.flex-col.justify-between.items-center
                                .exerciseEquipmentLabel Equipment:
                                .exerciseEquipmentSelect.relative
                                    .exerciseEquipmentSelected.select-none.cursor-pointer.flex.flex-1.items-center.justify-between.py-2(class='bg-[#EAF0F7]').px-3.rounded-xl
                                        input.bg-transparent.select-none.outline-none.cursor-pointer(type='text' name='exerciseEquipment' placeholder='Equipment...' onkeydown="return false" autocomplete='off' value='' style='caret-color: transparent')
                                        img(src='./../images/png/down-arrow-circle-svgrepo-com.png').w-4.h-4
                                    .absolute.exerciseEquipmentOptions.z-40.w-full.hidden.max-h-48.overflow-y-auto
                                        .exerciseEquipmentOption(class='bg-[#EAF0F7]' data-value='').py-2.px-2.rounded-t-xl.border-b.cursor-pointer Equipment...
                                        - exerciseEquipment = exerciseEquipment.map(equipment => `${equipment[0].toUpperCase()}${equipment.slice(1)}`)
                                        each equipment, idx in exerciseEquipment
                                            if idx != exerciseEquipment.length - 1
                                                .exerciseEquipmentOption(class='bg-[#EAF0F7]' data-value=equipment).py-2.px-2.border-b.cursor-pointer= equipment
                                            else
                                                .exerciseEquipmentOption(class='bg-[#EAF0F7]' data-value=equipment).py-2.px-2.rounded-b-xl.cursor-pointer= equipment
                            
                            .exercisePrimaryMuscles.font-AbhayaLibre.flex.flex-col.justify-between.items-center
                                .exercisePrimaryMusclesLabel Primary Muscles:
                                .exercisePrimaryMusclesSelect.relative
                                    .exercisePrimaryMusclesSelected.select-none.cursor-pointer.flex.flex-1.items-center.justify-between.py-2(class='bg-[#EAF0F7]').px-3.rounded-xl
                                        input.bg-transparent.select-none.outline-none.cursor-pointer(type='text' name='exercisePrimaryMuscles' placeholder='Primary Muscles...' onkeydown="return false" autocomplete='off' value='' style='caret-color: transparent')
                                        img(src='./../images/png/down-arrow-circle-svgrepo-com.png').w-4.h-4
                                    .absolute.exercisePrimaryMusclesOptions.z-40.w-full.hidden.max-h-48.overflow-y-auto
                                        .exercisePrimaryMusclesOption(class='bg-[#EAF0F7]' data-value='').py-2.px-2.rounded-t-xl.border-b.cursor-pointer Primary Muscles...
                                        - exercisePrimaryMuscles = exercisePrimaryMuscles.map(primaryMuscles => `${primaryMuscles[0].toUpperCase()}${primaryMuscles.slice(1)}`)
                                        each primaryMuscles, idx in exercisePrimaryMuscles
                                            if idx != exercisePrimaryMuscles.length - 1
                                                .exercisePrimaryMusclesOption(class='bg-[#EAF0F7]' data-value=primaryMuscles).py-2.px-2.border-b.cursor-pointer= primaryMuscles
                                            else
                                                .exercisePrimaryMusclesOption(class='bg-[#EAF0F7]' data-value=primaryMuscles).py-2.px-2.rounded-b-xl.cursor-pointer= primaryMuscles
                            
                            .exerciseCategory.font-AbhayaLibre.flex.flex-col.justify-between.items-center
                                .exerciseCategoryLabel Category:
                                .exerciseCategorySelect.relative
                                    .exerciseCategorySelected.select-none.cursor-pointer.flex.flex-1.items-center.justify-between.py-2(class='bg-[#EAF0F7]').px-3.rounded-xl
                                        input.bg-transparent.select-none.outline-none.cursor-pointer(type='text' name='exerciseCategory' placeholder='Category...' onkeydown="return false" autocomplete='off' value='' style='caret-color: transparent')
                                        img(src='./../images/png/down-arrow-circle-svgrepo-com.png').w-4.h-4
                                    .absolute.exerciseCategoryOptions.z-40.w-full.hidden.max-h-48.overflow-y-auto
                                        .exerciseCategoryOption(class='bg-[#EAF0F7]' data-value='').py-2.px-2.rounded-t-xl.border-b.cursor-pointer Category...
                                        - exerciseCategory = exerciseCategory.map(category => `${category[0].toUpperCase()}${category.slice(1)}`)
                                        each category, idx in exerciseCategory
                                            if idx != exerciseCategory.length - 1
                                                .exerciseCategoryOption(class='bg-[#EAF0F7]' data-value=category).py-2.px-2.border-b.cursor-pointer= category
                                            else
                                                .exerciseCategoryOption(class='bg-[#EAF0F7]' data-value=category).py-2.px-2.rounded-b-xl.cursor-pointer= category
                            
                        button.exerciseQueryButton.linearBackground.text-white.text-Alice.mt-10.py-2.rounded-xl.cursor-pointer(class='w-1/5') Find Now!

                    .resultNumber.text-Alice.text-center
                    .exerciseItemsContainer.gap-8.max-h-100.overflow-y-auto.items-center.justify-center.hidden.mt-12(class='w-2/3 mx-auto')
                        